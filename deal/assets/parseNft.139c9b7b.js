import{y as u,dW as s}from"./index.a890a1de.js";let i;function d(){return i||(i=new TextDecoder),i}const f="[object Uint8Array]";function l(t){if(!y(t))throw new TypeError(`Expected \`Uint8Array\`, got \`${typeof t}\``)}function y(t){return t?t.constructor===Uint8Array?!0:Object.prototype.toString.call(t)===f:!1}function p(t){return l(t),d().decode(t)}function c(t){if(typeof t!="string")throw new TypeError(`Expected \`string\`, got \`${typeof t}\``)}function w(t){return t.replaceAll("-","+").replaceAll("_","/")}function h(t){return c(t),Uint8Array.from(globalThis.atob(w(t)),r=>r.codePointAt(0))}function T(t){return c(t),p(h(t))}function A(t){return!!t.startsWith("data:application/json;base64")}function U(t){const[,r]=t.split(",");return T(r)}async function k(t){const{client:r,tokenId:o,tokenUri:n}=t;if(A(n))try{return JSON.parse(U(n))}catch(e){throw console.error("Failed to fetch base64 encoded NFT",{tokenId:o,tokenUri:n},e),e}const{download:a}=await u(()=>import("./index.a890a1de.js").then(e=>e.hr),["assets/index.a890a1de.js","assets/index.999128e1.css"]);try{if(!n.includes("{id}"))return await(await a({client:r,uri:n})).json()}catch(e){throw console.error("Failed to fetch non-dynamic NFT",{tokenId:o,tokenUri:n},e),e}try{try{return await(await a({client:r,uri:n.replace("{id}",s(o,{size:32}).slice(2))})).json()}catch{return await(await a({client:r,uri:n.replace("{id}",o.toString())})).json()}}catch(e){throw console.error("Failed to fetch dynamic NFT",{tokenId:o,tokenUri:n},e),e}}function m(t,r){switch(r.type){case"ERC721":return{metadata:t,owner:r?.owner??null,id:r.tokenId,tokenURI:r.tokenUri,type:r.type};case"ERC1155":return{metadata:t,owner:r?.owner??null,id:r.tokenId,tokenURI:r.tokenUri,type:r.type,supply:r.supply};default:throw new Error("Invalid NFT type")}}export{k as f,m as p};
