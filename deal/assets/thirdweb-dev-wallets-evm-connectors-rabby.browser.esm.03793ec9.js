import{_ as h,c3 as d,cb as u,c6 as a,g as p,cc as l,el as m}from"./index.a890a1de.js";import{InjectedConnector as w}from"./thirdweb-dev-wallets-evm-connectors-injected.browser.esm.0de1dfa5.js";class C extends w{constructor(e){const n={...{name:"Rabby Wallet",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:m},...e.options};super({chains:e.chains,options:n,connectorStorage:e.connectorStorage}),h(this,"id",d.rabby)}async connect(){let e=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};try{const t=await this.getProvider();if(!t)throw new u;this.setupListeners(),this.emit("message",{type:"connecting"});let n=null;if(this.options?.shimDisconnect&&!Boolean(this.connectorStorage.getItem(this.shimDisconnectKey))&&(n=await this.getAccount().catch(()=>null),!!n))try{await t.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(r){if(this.isUserRejectedRequestError(r))throw new a(r)}if(!n){const o=await t.request({method:"eth_requestAccounts"});n=p(o[0])}let s=await this.getChainId(),i=this.isChainUnsupported(s);if(e.chainId&&s!==e.chainId)try{await this.switchChain(e.chainId),s=e.chainId,i=this.isChainUnsupported(e.chainId)}catch(o){console.error(`Could not switch to chain id : ${e.chainId}`,o)}this.options?.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");const c={chain:{id:s,unsupported:i},provider:t,account:n};return this.emit("connect",c),c}catch(t){throw this.isUserRejectedRequestError(t)?new a(t):t.code===-32002?new l(t):t}}}export{C as RabbyConnector};
